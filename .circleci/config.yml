version: 2
jobs:
  build_debian_jessie:
    docker:
      - image: debian:jessie
    steps:
      - checkout
      - run:
          name: Install Python 3.5
          command: |
            apt-key adv --keyserver keyserver.ubuntu.com --recv-keys BA6932366A755776
            echo "
            deb http://archive.debian.org/debian jessie-backports main
            deb http://ppa.launchpad.net/deadsnakes/ppa/ubuntu trusty main
            " >> /etc/apt/sources.list
            apt-get -o Acquire::Check-Valid-Until=false update
            apt install dh-virtualenv=1.0-1~bpo8+1 python3.5 python3.5-dev python3.5-venv debhelper pkg-config libsystemd-dev iptables rng-tools python3-pip
      - run:
          name: Build dpkg packages
          command: |
            python3 -c 'import version; version.write_changelog()'
            cp debian/control.jessie debian/control
            cp debian/rules.jessie debian/rules
            debuild -e CIRCLE_BUILD_NUM -i -us -uc -b
            mkdir -p /tmp/deb
            mv ../*.deb /tmp/deb
      - deploy:
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
            gem install rake package_cloud
            package_cloud push wott/agent/debian/jessie /tmp/deb/*.deb
            package_cloud push wott/agent/raspbian/jessie /tmp/deb/*.deb
            fi
      - store_artifacts:
          path: test-reports
          destination: test-reports
      - store_artifacts:
          path: /tmp/deb
  build_debian_buster:
    docker:
      - image: debian:buster
    steps:
      - checkout
      - run:
          name: Install Python deps in a venv
          command: |
            apt update
            apt install -y python3-pip python3-netifaces python3-requests python3-tz python3-iptables python3-systemd \
            python3-psutil devscripts python3-all ruby-dev
            pip3 install -r requirements-dev.txt
      - run:
          name: Run linting and metrics
          command: |
            flake8 ./ --exclude=venv --ignore=E501 --output-file test-reports
      - run:
          name: Run tests
          command: |
            pytest --cov=agent
      - run:
          name: Build dpkg packages
          command: |
            python3 -c 'import version; version.write_changelog()'
            debuild -e CIRCLE_BUILD_NUM -i -us -uc -b
            mkdir -p /tmp/deb
            mv ../*.deb /tmp/deb
      - deploy:
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              gem install rake package_cloud
              package_cloud push wott/agent/debian/buster /tmp/deb/*.deb
              package_cloud push wott/agent/raspbian/buster /tmp/deb/*.deb
            fi
      - store_artifacts:
          path: test-reports
          destination: test-reports
      - store_artifacts:
          path: /tmp/deb
  build_debian_stretch:
    docker:
      - image: debian:stretch
    steps:
      - checkout
      - run:
          name: Install Python deps in a venv
          command: |
            apt update
            apt install -y python3-pip python3-netifaces python3-requests python3-tz python3-iptables python3-systemd \
            python3-psutil devscripts python3-all ruby-dev
            pip3 install -r requirements-dev.txt
      - run:
          name: Run linting and metrics
          command: |
            flake8 ./ --exclude=venv --ignore=E501 --output-file test-reports
      - run:
          name: Run tests
          command: |
            pytest --cov=agent
      - run:
          name: Build dpkg packages
          command: |
            python3 -c 'import version; version.write_changelog()'
            debuild -e CIRCLE_BUILD_NUM -i -us -uc -b
            mkdir -p /tmp/deb
            mv ../*.deb /tmp/deb
      - deploy:
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              gem install rake package_cloud
              package_cloud push wott/agent/debian/stretch /tmp/deb/*.deb
              package_cloud push wott/agent/raspbian/stretch /tmp/deb/*.deb
            fi
      - store_artifacts:
          path: test-reports
          destination: test-reports
      - store_artifacts:
          path: /tmp/deb
workflows:
  version: 2
  build_all:
    jobs:
      - build_debian_buster
      - build_debian_stretch:
          requires:
            - build_debian_buster